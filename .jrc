# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Author: Alex Guo
# Contact: chessnut@outlook.com
# Program: JARVIS.
# Purpose: Significantly speed up CLI.

function _jarvis_help {
cat <<-EOF
Usage: j [CMD] <file or dir> <bookmark>

Commands
  add | +   Add a bookmark
  del | -   Delete a bookmark
  all       List all bookmarks
  help      Print this help message

If no command is given, j jumps to the given bookmarks.
EOF
}

function _jarvis_cd {
  if [[ -n "$2" && -d "$1/$2" ]]
  then
      cd "$1/$2"
  else
      cd "$1"
  fi

  echo -e "${green}$PWD${endColor}"
}

function _jarvis_jump {
  local line name to

  while read line
  do
    # Kudos to @jsks for suggesting the following hack, which cleaned up the code quite a bit!
    name="${line%\=*}"

    if [[ "$name" == "$1" ]]
    then
      # Credit to MrGreen for supplying the following file logic.
      to="${line#*\=}"
      break
    fi
  done < "$jarvis_home/.jarvis"

  [[ -f "$to" ]] && ${EDITOR:-vim} "$to"
  [[ -d "$to" ]] && _jarvis_cd "$to" "$2"
}

function _jarvis_all {
  local line

  # Credit to Mr Green from ArchLinux for suggesting the following code.
  echo -e "${green}\c"
  while read line
  do
    echo ${line}
  done < "${jarvis_home}/.jarvis"
  echo -e "${endColor}\c"
}

function _jarvis_add {
  local target cur_alias

  if [[ -f "$1" || -d "$1" ]]
  then
    # This currently only works on linux
    target="$(readlink -f $1)"

    [[ -n "$2" ]] && cur_alias="$2"
  fi

  if [[ -z "$cur_alias" ]]
  then
    echo -e "Type an alias for ${green}${target:-$PWD}${endColor}, or ^C to quit: "
    read cur_alias
  fi

  if [[ -n "$cur_alias" ]]
  then
    echo "$cur_alias=${target:-$PWD}" >> "$jarvis_home/.jarvis"
    echo "\"$cur_alias\" added as a bookmark"
  fi
}

function _jarvis_update {
  local src_url

  src_url='https://github.com/mallochine/jarvis2/raw/master'
  wget -r -q "$src_url/.jrc" -O "$jarvis_home/.jrc"
  . "$jarvis_home/.jrc"
  echo "Updated."
}

# allow $EDITOR if set
# Credit to Mr Green and @jsks.
function _jarvis_edit {
  ${EDITOR:-vim} "$jarvis_home/.jarvis"
}

# Kudos to Mr Green for the following code.
function _jarvis_delete {
  local delete_alias

  if [[ -n "$1" ]]
  then
    delete_alias=$1
  else
    echo "Type an alias you wish to delete, or ^C to quit:"
    read delete_alias
  fi

  # now find the alias you wish to delete
  sed -i "/^${delete_alias}=/d" "$jarvis_home/.jarvis"
  echo "\"${delete_alias}\" deleted."
}

function j {
  local cmd=${1}
  local green='\e[0;32m'
  local blue='\e[1;34m'
  local endColor='\e[0m'
  local jarvis_home="~/"

  [[ ! -f "$jarvis_home/.jarvis" ]] && touch "$jarvis_home/.jarvis"

  # Shift parameters to filter out first $1.
  # Can't use subscripting since older zsh
  # does not support ${@:2}
  shift

  case $cmd in
  "add"|"+")
    _jarvis_add $@
  ;;
  "all")
    _jarvis_all
  ;;
  "update")
    _jarvis_update
  ;;
  "edit"|"vim")
    _jarvis_edit $@
  ;;
  "del"|"-")
    _jarvis_delete $@
  ;;
  "help")
    _jarvis_help
  ;;
  *)
    _jarvis_jump $cmd $@
  ;;
  esac
}
